{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/danidirks/react-stuff/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIH,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEL;AAF+C,CAArB,CAAhC;AAMP,OAAO,MAAMM,uBAAuB,GAAIC,YAAD,KAAmB;AACtDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGgB,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS, \n    payload: collectionsMap\n});\n\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE, \n    payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        \n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    };\n}"]},"metadata":{},"sourceType":"module"}