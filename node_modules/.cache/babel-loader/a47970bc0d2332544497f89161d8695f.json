{"ast":null,"code":"import { createSelector } from 'reselect';\n/* input selector */\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0));\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/danidirks/react-stuff/crwn-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartHidden","hidden","selectCartTotal","accumulatedTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAExCE,IAAD,IAAUA,IAAI,CAACE,SAF0B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IACTA,SAAS,CAACE,MAAV,CAAiB,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAnF,EAA6F,CAA7F,CAH8C,CAA3C;AAOP,OAAO,MAAMC,gBAAgB,GAAGX,cAAc,CAC1C,CAACC,UAAD,CAD0C,EAE1CE,IAAI,IAAIA,IAAI,CAACS,MAF6B,CAAvC;AAMP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACI,eAAD,CADyC,EAEzCC,SAAS,IAAIA,SAAS,CAACE,MAAV,CAAiB,CAACO,gBAAD,EAAmBL,QAAnB,KAAgCK,gBAAgB,GAAIL,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACM,KAAlG,EAA0G,CAA1G,CAF4B,CAAtC","sourcesContent":["import {createSelector} from 'reselect';\n\n/* input selector */\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    (cart) => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems], \n    cartItems =>\n    cartItems.reduce((accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity, 0)\n);\n\n\nexport const selectCartHidden = createSelector(\n    [selectCart], \n    cart => cart.hidden\n);\n\n\nexport const selectCartTotal = createSelector(\n    [selectCartItems], \n    cartItems => cartItems.reduce((accumulatedTotal, cartItem) => accumulatedTotal + (cartItem.quantity * cartItem.price), 0)\n)"]},"metadata":{},"sourceType":"module"}